import supabase from "../supabase-client";
import PatientProfileType from "../types/PatientProfileType";

const createPatient = async (
  formData: PatientProfileType,
  doctorId: string
): Promise<{ success: boolean; message: string }> => {
  const password = "defaultpassword23";

  try {
    // Step 1: Create auth user
    const { data: userData, error: createUserError } =
      await supabase.auth.signUp({
        email: formData.email,
        password,
        options: {
          emailRedirectTo: `${window.location.origin}/profile`,
        },
      });

    if (createUserError || !userData?.user?.id) {
      console.error("Error creating auth user:", createUserError?.message);
      return {
        success: false,
        message: createUserError?.message || "Unknown error creating auth user",
      };
    }

    const userId = userData.user.id; // Reference to line 12 | this is the user ID generated by Supabase

    // Step 2: Insert into patients table
    const { error: insertPatientError } = await supabase
      .from("patients")
      .insert({
        id: userId,
        doctor_id: doctorId,
        email: formData.email,
        first_name: formData.first_name,
        last_name: formData.last_name,
        birthdate: formData.birthdate,
        contact_number: formData.contact_number,
        notes: formData.notes,
        role: formData.role,
      });

    if (insertPatientError) {
      console.error(
        "Error inserting patient profile:",
        insertPatientError.message
      );

      // Step 3: Rollback - delete the created auth user
      const { error: deleteUserError } = await supabase.auth.admin.deleteUser(
        userId
      );
      if (deleteUserError) {
        console.error(
          "Failed to rollback user creation:",
          deleteUserError.message
        );
      }

      return { success: false, message: insertPatientError.message };
    }

    return { success: true, message: "âœ… Patient created successfully" };
  } catch (err) {
    console.error("ðŸ”¥ Unexpected error during patient creation:", err);
    return { success: false, message: "An unexpected error occurred." };
  }
};

export default createPatient;
